default:
  image: docker:stable
  services:
    - docker:dind
  before_script:
    - docker --version
    - echo -e "\033[1;36m DO_BASE:$DO_BASE DO_CURRENT:$DO_CURRENT DO_TRANSITION:$DO_TRANSITION DO_DEV:$DO_DEV DO_RELEASE:$DO_RELEASE \033[0;37m"
    # Pull base image from Docker hub.
    - docker pull --quiet $IMAGE_BASE || true
    - if [ ! $EXTRA_IMAGE == 0 ]; then docker pull --quiet $EXTRA_IMAGE || true; fi
    # Login to Gitlab and pull current image if exist.
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - echo -e "\033[1;36m Pull $CI_REGISTRY_IMAGE/$IMAGE \033[0;37m"
    - docker pull --quiet $CI_REGISTRY_IMAGE/$IMAGE || true
  artifacts:
    paths:
      - report.xml
    reports:
      junit: report.xml

stages:
  # Base image is no-drupal
  - base
  # Current version.
  - current
  # Transition version, alpha, beta, rc...
  - transition
  # Dev version.
  - dev

variables:
  DRUPAL_CURRENT: '8.8'
  DRUPAL_TRANSITION: '8.9'
  DRUPAL_DEV: '9.0'
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  RELEASE_REGISTRY: docker.io
  RELEASE_IMAGE: index.docker.io/$RELEASE_USER
  DO_RELEASE: 1
  DO_BASE: 1
  DO_CURRENT: 1
  DO_TRANSITION: 1
  DO_DEV: 1
  EXTRA_IMAGE: 0

base:
  stage: base
  rules:
    - if: '$DO_BASE == "1"'
  script:
    # Build the image from cache.
    - echo -e "\033[1;36m Build $CI_REGISTRY_IMAGE/$IMAGE from $DIR \033[0;37m"
    # - docker build --compress --cache-from $CI_REGISTRY_IMAGE/$IMAGE --tag $CI_REGISTRY_IMAGE/$IMAGE $DIR
    - docker build --compress --tag $CI_REGISTRY_IMAGE/$IMAGE $DIR
    - docker images
    # Tests
    - docker run --rm -t $CI_REGISTRY_IMAGE/$IMAGE /scripts/run-tests.sh report > report.xml
    # Push to Gitlab registry for all versions.
    - echo -e "\033[1;36m Push $CI_REGISTRY_IMAGE/$IMAGE $CI_REGISTRY_IMAGE/$IMAGE_DEV $CI_REGISTRY_IMAGE/$IMAGE_TEST \033[0;37m"
    - docker tag $CI_REGISTRY_IMAGE/$IMAGE $CI_REGISTRY_IMAGE/$IMAGE_DEV
    - if [ $DO_TRANSITION == 1 ]; then docker tag $CI_REGISTRY_IMAGE/$IMAGE $CI_REGISTRY_IMAGE/$IMAGE_TEST; fi
    - docker push $CI_REGISTRY_IMAGE/$IMAGE
    - docker push $CI_REGISTRY_IMAGE/$IMAGE_DEV
    - if [ $DO_TRANSITION == 1 ]; then docker push $CI_REGISTRY_IMAGE/$IMAGE_TEST; fi
  after_script:
    - docker tag $CI_REGISTRY_IMAGE/$IMAGE $RELEASE_IMAGE/$IMAGE
    - docker tag $CI_REGISTRY_IMAGE/$IMAGE $RELEASE_IMAGE/$IMAGE_DEV
    - if [ $DO_TRANSITION == 1 ]; then
        docker tag $CI_REGISTRY_IMAGE/$IMAGE $RELEASE_IMAGE/$IMAGE_TEST;
      fi
    - docker images
    # Login, tag and push to Docker hub.
    - |
      if [ $DO_RELEASE == 1 ]; then
        echo -e "\033[1;36m Push $RELEASE_IMAGE/$IMAGE $RELEASE_IMAGE/$IMAGE_DEV to $RELEASE_REGISTRY with user $RELEASE_USER \033[0;37m"
        docker login -u $RELEASE_USER -p $RELEASE_PASSWORD $RELEASE_REGISTRY
        docker push $RELEASE_IMAGE/$IMAGE
        docker push $RELEASE_IMAGE/$IMAGE_DEV
        if [ ! $DO_TRANSITION ]; then
          docker push $RELEASE_IMAGE/$IMAGE_TEST
        fi
      fi

  variables:
    IMAGE: drupal8ci:${DRUPAL_CURRENT}-no-drupal
    IMAGE_TEST: drupal8ci:${DRUPAL_TRANSITION}-no-drupal
    IMAGE_DEV: drupal8ci:${DRUPAL_DEV}-no-drupal
    DIR: '${DRUPAL_CURRENT}/no-drupal'
    IMAGE_BASE: drupal:${DRUPAL_CURRENT}-apache
    EXTRA_IMAGE: composer:latest

.build_test_release:
  script:
    # Make sure we are using Gitlab image as base.
    - sed -i "s#FROM mogtofu33/drupal8ci#FROM ${CI_REGISTRY_IMAGE}/drupal8ci#g" ${CI_PROJECT_DIR}/$DIR/Dockerfile
    # Build the image from cache.
    - echo -e "\033[1;36m Build $CI_REGISTRY_IMAGE/$IMAGE from $DIR \033[0;37m"
    # - docker build --compress --cache-from $CI_REGISTRY_IMAGE/$IMAGE --tag $CI_REGISTRY_IMAGE/$IMAGE $DIR
    - docker build --compress --tag $CI_REGISTRY_IMAGE/$IMAGE $DIR
    - docker images
    # Tests
    - docker run --rm -t $CI_REGISTRY_IMAGE/$IMAGE /scripts/run-tests.sh report > report.xml
    - echo -e "\033[1;36m Push $CI_REGISTRY_IMAGE/$IMAGE \033[0;37m"
    # Push to Gitlab registry for next steps.
    - docker push $CI_REGISTRY_IMAGE/$IMAGE
  after_script:
    - docker tag $CI_REGISTRY_IMAGE/$IMAGE $RELEASE_IMAGE/$IMAGE
    - docker images
    # Login to Docker hub, tag and push.
    - |
      if [ $DO_RELEASE == 1 ]; then
        echo -e "\033[1;36m Push $RELEASE_IMAGE/$IMAGE to $RELEASE_REGISTRY with user $RELEASE_USER \033[0;37m"
        docker login -u $RELEASE_USER -p $RELEASE_PASSWORD $RELEASE_REGISTRY
        docker push $RELEASE_IMAGE/$IMAGE
      fi

current:
  stage: current
  rules:
    - if: '$DO_CURRENT == "1"'
  extends: .build_test_release
  variables:
    IMAGE: drupal8ci:${DRUPAL_CURRENT}-drupal
    DIR: '${DRUPAL_CURRENT}/drupal'
    IMAGE_BASE: ${CI_REGISTRY_IMAGE}/drupal8ci:${DRUPAL_CURRENT}-no-drupal

transition:
  stage: transition
  rules:
    - if: '$DO_TRANSITION == "1"'
  extends: .build_test_release
  variables:
    IMAGE: drupal8ci:${DRUPAL_TRANSITION}-drupal
    DIR: '${DRUPAL_TRANSITION}/drupal'
    IMAGE_BASE: ${CI_REGISTRY_IMAGE}/drupal8ci:${DRUPAL_CURRENT}-no-drupal

dev:
  stage: dev
  rules:
    - if: '$DO_DEV == "1"'
  extends: .build_test_release
  variables:
    IMAGE: drupal8ci:${DRUPAL_DEV}-drupal
    DIR: '${DRUPAL_DEV}/drupal'
    IMAGE_BASE: ${CI_REGISTRY_IMAGE}/drupal8ci:${DRUPAL_CURRENT}-no-drupal
