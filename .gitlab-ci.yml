default:
  image: docker:stable
  services:
    - docker:dind
  before_script:
    # Pull base image from Docker hub.
    - docker pull $IMAGE_BASE || true
    - if [ ! $EXTRA_IMAGE == 0 ]; then docker pull $EXTRA_IMAGE || true; fi
    # Login to Gitlab and pull current image if exist.
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker pull $CI_REGISTRY_IMAGE/$IMAGE || true
  artifacts:
    paths:
      - report.xml
    reports:
      junit: report.xml

stages:
  # Base image is no-drupal
  - base
  # Current version.
  - current
  # Transition version, alpha, beta, rc...
  - transition
  # Dev version.
  - dev

variables:
  DRUPAL_CURRENT: '8.8'
  DRUPAL_TEST: '8.9'
  DRUPAL_DEV: '9.0'
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  RELEASE_REGISTRY: docker.io
  RELEASE_IMAGE: index.docker.io/$RELEASE_USER
  CI_DO_RELEASE: 1
  SKIP_BASE: 0
  SKIP_CURRENT: 0
  SKIP_TRANSITION: 0
  SKIP_DEV: 0
  EXTRA_IMAGE: 0

base:
  stage: base
  except:
    variables:
      - $SKIP_BASE == "1"
  script:
    # Build the image from cache.
    - docker build --compress --cache-from $CI_REGISTRY_IMAGE/$IMAGE --tag $CI_REGISTRY_IMAGE/$IMAGE $DIR
    # Tests
    - docker run --rm -t $CI_REGISTRY_IMAGE/$IMAGE /run-tests.sh report >> report.xml
    # - docker run --rm -t $CI_REGISTRY_IMAGE/$IMAGE /run-tests.sh
    # Push to Gitlab registry for all versions.
    - docker tag $CI_REGISTRY_IMAGE/$IMAGE $CI_REGISTRY_IMAGE/$IMAGE_DEV
    - if [ ! $SKIP_TRANSITION ]; then docker tag $CI_REGISTRY_IMAGE/$IMAGE $CI_REGISTRY_IMAGE/$IMAGE_TEST; fi
    - docker push $CI_REGISTRY_IMAGE/$IMAGE
    - docker push $CI_REGISTRY_IMAGE/$IMAGE_DEV
    - if [ ! $SKIP_TRANSITION ]; then docker push $CI_REGISTRY_IMAGE/$IMAGE_TEST; fi
    # Tag for Docker hub and push all versions.
    - docker tag $CI_REGISTRY_IMAGE/$IMAGE $RELEASE_IMAGE/$IMAGE
    - docker tag $CI_REGISTRY_IMAGE/$IMAGE $RELEASE_IMAGE/$IMAGE_DEV
    - if [ ! $SKIP_TRANSITION ]; then docker tag $CI_REGISTRY_IMAGE/$IMAGE $RELEASE_IMAGE/$IMAGE_TEST; fi
    - docker images
    # Login and push to Docker hub.
    - if [ ${CI_DO_RELEASE} == 1 ]; then
        docker login -u $RELEASE_USER -p $RELEASE_PASSWORD $RELEASE_REGISTRY;
        docker push $RELEASE_IMAGE/$IMAGE;
        docker push $RELEASE_IMAGE/$IMAGE_DEV;
        if [ ! $SKIP_TRANSITION ]; then push $RELEASE_IMAGE/$IMAGE_TEST; fi
      fi

  variables:
    IMAGE: drupal8ci:${DRUPAL_CURRENT}-no-drupal
    IMAGE_TEST: drupal8ci:${DRUPAL_TEST}-no-drupal
    IMAGE_DEV: drupal8ci:${DRUPAL_DEV}-no-drupal
    DIR: '${DRUPAL_CURRENT}/no-drupal'
    IMAGE_BASE: drupal:${DRUPAL_CURRENT}-apache
    EXTRA_IMAGE: composer:latest

.build_test_release:
  script:
    # Make sure we are using Gitlab image as base.
    - sed -i "s#FROM mogtofu33/drupal8ci#FROM ${CI_REGISTRY_IMAGE}/drupal8ci#g" ${CI_PROJECT_DIR}/$DIR/Dockerfile
    # Build the image from cache.
    - docker build --compress --cache-from $CI_REGISTRY_IMAGE/$IMAGE --tag $CI_REGISTRY_IMAGE/$IMAGE $DIR
    # Tests
    - docker run --rm -t $CI_REGISTRY_IMAGE/$IMAGE /run-tests.sh report >> report.xml
    # - docker run --rm -t $CI_REGISTRY_IMAGE/$IMAGE /run-tests.sh
    # Push to Gitlab registry for next steps.
    - docker push $CI_REGISTRY_IMAGE/$IMAGE
    # Tag for Docker hub and push.
    - docker tag $CI_REGISTRY_IMAGE/$IMAGE $RELEASE_IMAGE/$IMAGE
    # Login to Docker hub and push.
    - if [ ${CI_DO_RELEASE} == 1 ]; then
        docker login -u $RELEASE_USER -p $RELEASE_PASSWORD $RELEASE_REGISTRY;
        docker push $RELEASE_IMAGE/$IMAGE;
      fi

current:
  stage: current
  except:
    variables:
      - $SKIP_CURRENT == "1"
  extends: .build_test_release
  variables:
    IMAGE: drupal8ci:${DRUPAL_TEST}-drupal
    DIR: '${DRUPAL_TEST}/drupal'
    IMAGE_BASE: ${CI_REGISTRY_IMAGE}/drupal8ci:${DRUPAL_CURRENT}-no-drupal

transition:
  stage: transition
  except:
    variables:
      - $SKIP_TRANSITION == "1"
  extends: .build_test_release
  variables:
    IMAGE: drupal8ci:${DRUPAL_TEST}-drupal
    DIR: '${DRUPAL_TEST}/drupal'
    IMAGE_BASE: ${CI_REGISTRY_IMAGE}/drupal8ci:${DRUPAL_CURRENT}-no-drupal

dev:
  stage: dev
  except:
    variables:
      - $SKIP_DEV == "1"
  extends: .build_test_release
  variables:
    IMAGE: drupal8ci:${DRUPAL_DEV}-drupal
    DIR: '${DRUPAL_DEV}/drupal'
    IMAGE_BASE: ${CI_REGISTRY_IMAGE}/drupal8ci:${DRUPAL_CURRENT}-no-drupal
